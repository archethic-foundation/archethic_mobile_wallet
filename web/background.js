var background;(()=>{"use strict";function n(){return`chrome-extension://${chrome.runtime.id}/index.html`}async function e(){const n=await o();return null!==n&&(await chrome.windows.update(n.windowId,{focused:!0}),void 0!==n.id&&await chrome.tabs.update(n.id,{active:!0}),!0)}async function o(){const e=await chrome.tabs.query({url:n()});return 0===e.length?null:e[0]}async function t(){if(await e())return;const n=await chrome.windows.getCurrent(),o=Math.round((n.left??200)+(n.width??0)-370-32),t=Math.round((n.top??200)+64);await chrome.windows.create({url:"index.html",width:370,height:800,type:"panel",focused:!0,left:o,top:t})}chrome.runtime.onMessageExternal.addListener(((n,e,i)=>"ensureExtensionPopupOpened"===n?(async function(){await async function(){return null!==await o()}()||await t()}().then((()=>{i()})),!0):"updateIcon"===n.type&&"boolean"==typeof n.isLocked?(async function(n){const e=n?{16:"icons/icon_16_locked.png",32:"icons/icon_32_locked.png",48:"icons/icon_48_locked.png",128:"icons/icon_128_locked.png"}:{16:"icons/icon_16.png",32:"icons/icon_32.png",48:"icons/icon_48.png",128:"icons/icon_128.png"};await chrome.action.setIcon({path:e})}(n.isLocked).then((()=>{i({success:!0})})),!0):void 0)),chrome.runtime.onMessage.addListener(((o,t,i)=>"areMultipleExtensionPopupsOpened"===o?(async function(){return(await chrome.tabs.query({url:n()})).length>1}().then((n=>{i(n)})),!0):"focusExtensionPopup"===o?(e().then((n=>{i(n)})),!0):void 0)),chrome.action.onClicked.addListener((async function(n){await t()})),background={}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFja2dyb3VuZC5qcyIsIm1hcHBpbmdzIjoia0NBa0NBLFNBQVNBLElBQ0wsTUFBTyxzQkFBc0JDLE9BQU9DLFFBQVFDLGVBQ2hELENBS0FDLGVBQWVDLElBQ1gsTUFBTUMsUUFBcUJDLElBQzNCLE9BQXFCLE9BQWpCRCxVQUNNTCxPQUFPTyxRQUFRQyxPQUNqQkgsRUFBYUksU0FDYixDQUFFQyxTQUFTLFNBRVNDLElBQXBCTixFQUFhSCxVQUNQRixPQUFPWSxLQUFLSixPQUNkSCxFQUFhSCxHQUNiLENBQUVXLFFBQVEsS0FHWCxFQUdmLENBRUFWLGVBQWVHLElBQ1gsTUFBTVEsUUFBc0JkLE9BQU9ZLEtBQUtHLE1BQU0sQ0FBRUMsSUFBS2pCLE1BRXJELE9BQTZCLElBQXpCZSxFQUFjRyxPQUFxQixLQUNoQ0gsRUFBYyxFQUN6QixDQUVBWCxlQUFlZSxJQUNYLFNBQVVkLElBQ04sT0FHSixNQUFNZSxRQUFzQm5CLE9BQU9PLFFBQVFhLGFBS3JDQyxFQUFPQyxLQUFLQyxPQUFPSixFQUFjRSxNQUFRLE1BQVFGLEVBQWNLLE9BQVMsR0FIM0QsSUFHNkUsSUFDMUZDLEVBQU1ILEtBQUtDLE9BQU9KLEVBQWNNLEtBQU8sS0FBTyxVQUU5Q3pCLE9BQU9PLFFBQVFtQixPQUFPLENBQ3hCVixJQUFLLGFBQ0xRLE1BUmUsSUFTZkcsT0FSZ0IsSUFTaEJDLEtBQU0sUUFDTmxCLFNBQVMsRUFDVFcsS0FBTUEsRUFDTkksSUFBS0EsR0FFYixDQXhGQXpCLE9BQU9DLFFBQVE0QixrQkFBa0JDLGFBQVksQ0FBQ0MsRUFBU0MsRUFBUUMsSUFDM0MsK0JBQVpGLEdBa0dSNUIsdUJBVEFBLGlCQUNJLE9BQXNDLGFBQXhCRyxHQUNsQixDQVFjNEIsVUFHSmhCLEdBQ1YsQ0F0R1FpQixHQUE2QkMsTUFBSyxLQUFRSCxHQUFjLEtBQ2pELEdBRVUsZUFBakJGLEVBQVFILE1BQXFELGtCQUFyQkcsRUFBUU0sVUFvR3hEbEMsZUFBbUNrQyxHQUMvQixNQUFNQyxFQUFXRCxFQUNYLENBQ0UsR0FBTSwyQkFDTixHQUFNLDJCQUNOLEdBQU0sMkJBQ04sSUFBTyw2QkFFVCxDQUNFLEdBQU0sb0JBQ04sR0FBTSxvQkFDTixHQUFNLG9CQUNOLElBQU8sNEJBR1RyQyxPQUFPdUMsT0FBT0MsUUFBUSxDQUFFQyxLQUFNSCxHQUN4QyxDQWxIUUksQ0FEaUJYLEVBQVFNLFVBQ0tELE1BQUssS0FDL0JILEVBQWEsQ0FBRVUsU0FBUyxHQUFPLEtBRTVCLFFBTFgsSUFTSjNDLE9BQU9DLFFBQVEyQyxVQUFVZCxhQUFZLENBQUNDLEVBQVNDLEVBQVFDLElBQ25DLHFDQUFaRixHQStFUjVCLGlCQUVJLGFBRDRCSCxPQUFPWSxLQUFLRyxNQUFNLENBQUVDLElBQUtqQixPQUNoQ2tCLE9BQVMsQ0FDbEMsQ0FqRlE0QixHQUFtQ1QsTUFBTVUsSUFDckNiLEVBQWFhLEVBQVMsS0FFbkIsR0FFSyx3QkFBWmYsR0FDQTNCLElBQXNCZ0MsTUFBTVUsSUFDeEJiLEVBQWFhLEVBQVMsS0FFbkIsUUFKWCxJQVFKOUMsT0FBT3VDLE9BQU9RLFVBQVVqQixhQUFZM0IsZUFBZ0I2QyxTQUMxQzlCLEdBQ1YsSSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1jaHJvbWUtZXh0ZW5zaW9uLy4vc3JjL2JhY2tncm91bmQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiY2hyb21lLnJ1bnRpbWUub25NZXNzYWdlRXh0ZXJuYWwuYWRkTGlzdGVuZXIoKG1lc3NhZ2UsIHNlbmRlciwgc2VuZFJlc3BvbnNlKSA9PiB7XG4gICAgaWYgKG1lc3NhZ2UgPT09ICdlbnN1cmVFeHRlbnNpb25Qb3B1cE9wZW5lZCcpIHtcbiAgICAgICAgZW5zdXJlRXh0ZW5zaW9uUG9wdXBPcGVuZWQoKS50aGVuKCgpID0+IHsgc2VuZFJlc3BvbnNlKCkgfSlcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG4gICAgaWYgKG1lc3NhZ2UudHlwZSA9PT0gXCJ1cGRhdGVJY29uXCIgJiYgdHlwZW9mIG1lc3NhZ2UuaXNMb2NrZWQgPT09IFwiYm9vbGVhblwiKSB7XG4gICAgICAgIGNvbnN0IGlzTG9ja2VkID0gbWVzc2FnZS5pc0xvY2tlZDtcbiAgICAgICAgdXBkYXRlRXh0ZW5zaW9uSWNvbihpc0xvY2tlZCkudGhlbigoKSA9PiB7XG4gICAgICAgICAgICBzZW5kUmVzcG9uc2UoeyBzdWNjZXNzOiB0cnVlIH0pO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxufSlcblxuY2hyb21lLnJ1bnRpbWUub25NZXNzYWdlLmFkZExpc3RlbmVyKChtZXNzYWdlLCBzZW5kZXIsIHNlbmRSZXNwb25zZSkgPT4ge1xuICAgIGlmIChtZXNzYWdlID09PSAnYXJlTXVsdGlwbGVFeHRlbnNpb25Qb3B1cHNPcGVuZWQnKSB7XG4gICAgICAgIGFyZU11bHRpcGxlRXh0ZW5zaW9uUG9wdXBzT3BlbmVkKCkudGhlbigocmVzcG9uc2UpID0+IHtcbiAgICAgICAgICAgIHNlbmRSZXNwb25zZShyZXNwb25zZSlcbiAgICAgICAgfSlcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG4gICAgaWYgKG1lc3NhZ2UgPT09ICdmb2N1c0V4dGVuc2lvblBvcHVwJykge1xuICAgICAgICBmb2N1c0V4dGVuc2lvblBvcHVwKCkudGhlbigocmVzcG9uc2UpID0+IHtcbiAgICAgICAgICAgIHNlbmRSZXNwb25zZShyZXNwb25zZSlcbiAgICAgICAgfSlcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG59KVxuXG5jaHJvbWUuYWN0aW9uLm9uQ2xpY2tlZC5hZGRMaXN0ZW5lcihhc3luYyBmdW5jdGlvbiAoXykge1xuICAgIGF3YWl0IG9wZW5FeHRlbnNpb25Qb3B1cCgpXG59KTtcblxuXG5mdW5jdGlvbiBleHRlbnNpb25VcmwoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gYGNocm9tZS1leHRlbnNpb246Ly8ke2Nocm9tZS5ydW50aW1lLmlkfS9pbmRleC5odG1sYFxufVxuXG4vKipcbiAqIEByZXR1cm5zIHtib29sZWFufSB0cnVlIGlmIGEgZXh0ZW5zaW9uIHBvcHVwIGhhcyBiZWVuIGZvY3VzZWRcbiAqL1xuYXN5bmMgZnVuY3Rpb24gZm9jdXNFeHRlbnNpb25Qb3B1cCgpOiBQcm9taXNlPGJvb2xlYW4+IHtcbiAgICBjb25zdCBleHRlbnNpb25UYWIgPSBhd2FpdCBmaW5kRXh0ZW5zaW9uVGFiKClcbiAgICBpZiAoZXh0ZW5zaW9uVGFiICE9PSBudWxsKSB7XG4gICAgICAgIGF3YWl0IGNocm9tZS53aW5kb3dzLnVwZGF0ZShcbiAgICAgICAgICAgIGV4dGVuc2lvblRhYi53aW5kb3dJZCxcbiAgICAgICAgICAgIHsgZm9jdXNlZDogdHJ1ZSB9LFxuICAgICAgICApXG4gICAgICAgIGlmIChleHRlbnNpb25UYWIuaWQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgYXdhaXQgY2hyb21lLnRhYnMudXBkYXRlKFxuICAgICAgICAgICAgICAgIGV4dGVuc2lvblRhYi5pZCxcbiAgICAgICAgICAgICAgICB7IGFjdGl2ZTogdHJ1ZSB9LFxuICAgICAgICAgICAgKVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgfVxuICAgIHJldHVybiBmYWxzZVxufVxuXG5hc3luYyBmdW5jdGlvbiBmaW5kRXh0ZW5zaW9uVGFiKCk6IFByb21pc2U8Y2hyb21lLnRhYnMuVGFiIHwgbnVsbD4ge1xuICAgIGNvbnN0IGV4dGVuc2lvblRhYnMgPSBhd2FpdCBjaHJvbWUudGFicy5xdWVyeSh7IHVybDogZXh0ZW5zaW9uVXJsKCkgfSlcblxuICAgIGlmIChleHRlbnNpb25UYWJzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIG51bGxcbiAgICByZXR1cm4gZXh0ZW5zaW9uVGFic1swXVxufVxuXG5hc3luYyBmdW5jdGlvbiBvcGVuRXh0ZW5zaW9uUG9wdXAoKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgaWYgKGF3YWl0IGZvY3VzRXh0ZW5zaW9uUG9wdXAoKSkge1xuICAgICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBjb25zdCBjdXJyZW50V2luZG93ID0gYXdhaXQgY2hyb21lLndpbmRvd3MuZ2V0Q3VycmVudCgpO1xuXG4gICAgY29uc3QgcG9wdXBXaWR0aCA9IDM3MFxuICAgIGNvbnN0IHBvcHVwSGVpZ2h0ID0gODAwXG5cbiAgICBjb25zdCBsZWZ0ID0gTWF0aC5yb3VuZCgoY3VycmVudFdpbmRvdy5sZWZ0ID8/IDIwMCkgKyAoY3VycmVudFdpbmRvdy53aWR0aCA/PyAwKSAtIHBvcHVwV2lkdGggLSAzMik7XG4gICAgY29uc3QgdG9wID0gTWF0aC5yb3VuZCgoY3VycmVudFdpbmRvdy50b3AgPz8gMjAwKSArIDY0KTtcblxuICAgIGF3YWl0IGNocm9tZS53aW5kb3dzLmNyZWF0ZSh7XG4gICAgICAgIHVybDogXCJpbmRleC5odG1sXCIsXG4gICAgICAgIHdpZHRoOiBwb3B1cFdpZHRoLFxuICAgICAgICBoZWlnaHQ6IHBvcHVwSGVpZ2h0LFxuICAgICAgICB0eXBlOiBcInBhbmVsXCIsXG4gICAgICAgIGZvY3VzZWQ6IHRydWUsXG4gICAgICAgIGxlZnQ6IGxlZnQsXG4gICAgICAgIHRvcDogdG9wLFxuICAgIH0pXG59XG5cbmFzeW5jIGZ1bmN0aW9uIGlzRXh0ZW5zaW9uUG9wdXBPcGVuZWQoKTogUHJvbWlzZTxib29sZWFuPiB7XG4gICAgcmV0dXJuIChhd2FpdCBmaW5kRXh0ZW5zaW9uVGFiKCkpICE9PSBudWxsXG59XG5cbmFzeW5jIGZ1bmN0aW9uIGFyZU11bHRpcGxlRXh0ZW5zaW9uUG9wdXBzT3BlbmVkKCk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAgIGNvbnN0IGV4dGVuc2lvblRhYnMgPSBhd2FpdCBjaHJvbWUudGFicy5xdWVyeSh7IHVybDogZXh0ZW5zaW9uVXJsKCkgfSlcbiAgICByZXR1cm4gZXh0ZW5zaW9uVGFicy5sZW5ndGggPiAxXG59XG5cbmFzeW5jIGZ1bmN0aW9uIGVuc3VyZUV4dGVuc2lvblBvcHVwT3BlbmVkKCkge1xuICAgIGlmIChhd2FpdCBpc0V4dGVuc2lvblBvcHVwT3BlbmVkKCkpIHtcbiAgICAgICAgcmV0dXJuXG4gICAgfVxuICAgIGF3YWl0IG9wZW5FeHRlbnNpb25Qb3B1cCgpXG59XG5hc3luYyBmdW5jdGlvbiB1cGRhdGVFeHRlbnNpb25JY29uKGlzTG9ja2VkOiBib29sZWFuKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgY29uc3QgaWNvblBhdGggPSBpc0xvY2tlZFxuICAgICAgICA/IHtcbiAgICAgICAgICAgIFwiMTZcIjogXCJpY29ucy9pY29uXzE2X2xvY2tlZC5wbmdcIixcbiAgICAgICAgICAgIFwiMzJcIjogXCJpY29ucy9pY29uXzMyX2xvY2tlZC5wbmdcIixcbiAgICAgICAgICAgIFwiNDhcIjogXCJpY29ucy9pY29uXzQ4X2xvY2tlZC5wbmdcIixcbiAgICAgICAgICAgIFwiMTI4XCI6IFwiaWNvbnMvaWNvbl8xMjhfbG9ja2VkLnBuZ1wiXG4gICAgICAgIH1cbiAgICAgICAgOiB7XG4gICAgICAgICAgICBcIjE2XCI6IFwiaWNvbnMvaWNvbl8xNi5wbmdcIixcbiAgICAgICAgICAgIFwiMzJcIjogXCJpY29ucy9pY29uXzMyLnBuZ1wiLFxuICAgICAgICAgICAgXCI0OFwiOiBcImljb25zL2ljb25fNDgucG5nXCIsXG4gICAgICAgICAgICBcIjEyOFwiOiBcImljb25zL2ljb25fMTI4LnBuZ1wiXG4gICAgICAgIH07XG5cbiAgICBhd2FpdCBjaHJvbWUuYWN0aW9uLnNldEljb24oeyBwYXRoOiBpY29uUGF0aCB9KTtcbn1cbiJdLCJuYW1lcyI6WyJleHRlbnNpb25VcmwiLCJjaHJvbWUiLCJydW50aW1lIiwiaWQiLCJhc3luYyIsImZvY3VzRXh0ZW5zaW9uUG9wdXAiLCJleHRlbnNpb25UYWIiLCJmaW5kRXh0ZW5zaW9uVGFiIiwid2luZG93cyIsInVwZGF0ZSIsIndpbmRvd0lkIiwiZm9jdXNlZCIsInVuZGVmaW5lZCIsInRhYnMiLCJhY3RpdmUiLCJleHRlbnNpb25UYWJzIiwicXVlcnkiLCJ1cmwiLCJsZW5ndGgiLCJvcGVuRXh0ZW5zaW9uUG9wdXAiLCJjdXJyZW50V2luZG93IiwiZ2V0Q3VycmVudCIsImxlZnQiLCJNYXRoIiwicm91bmQiLCJ3aWR0aCIsInRvcCIsImNyZWF0ZSIsImhlaWdodCIsInR5cGUiLCJvbk1lc3NhZ2VFeHRlcm5hbCIsImFkZExpc3RlbmVyIiwibWVzc2FnZSIsInNlbmRlciIsInNlbmRSZXNwb25zZSIsImlzRXh0ZW5zaW9uUG9wdXBPcGVuZWQiLCJlbnN1cmVFeHRlbnNpb25Qb3B1cE9wZW5lZCIsInRoZW4iLCJpc0xvY2tlZCIsImljb25QYXRoIiwiYWN0aW9uIiwic2V0SWNvbiIsInBhdGgiLCJ1cGRhdGVFeHRlbnNpb25JY29uIiwic3VjY2VzcyIsIm9uTWVzc2FnZSIsImFyZU11bHRpcGxlRXh0ZW5zaW9uUG9wdXBzT3BlbmVkIiwicmVzcG9uc2UiLCJvbkNsaWNrZWQiLCJfIl0sInNvdXJjZVJvb3QiOiIifQ==